const path = require('path');
const fs = require('fs');

const base = path.join(__dirname, '..', 'src');

const fileExtsReg = /\.tsx?/;

const isIgnored = (name) => name !== 'index.ts' && !name.startsWith('_');

const scanAndGenerate = (targetFolder, level = 0) => {
  const rawNames = [];
  const files = fs.readdirSync(targetFolder, {
    withFileTypes: true,
  });

  files.forEach((dirent) => {
    if (dirent.isFile() && isIgnored(dirent.name)) {
      rawNames.push(dirent.name);
    }

    if (dirent.isDirectory() && level === 0) {
      rawNames.push(dirent.name);
      scanAndGenerate(path.join(targetFolder, dirent.name), level + 1);
    }
  });

  const imports = rawNames
    .sort()
    .map((name) => name.replace(fileExtsReg, ''))
    .map((name) => `export * from './${name}';`);

  if (imports.length) {
    fs.writeFileSync(
      path.join(targetFolder, 'index.ts'),
      '// Generated by yarn generate-indexes\n\n' + imports.join('\n') + '\n'
    );
  }
};

['components', 'helpers'].forEach((target) => {
  scanAndGenerate(path.join(base, target));
});
